version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    networks:
      - loyalty_network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - loyalty_network

  web:
    build: .
    command: gunicorn loyalty_system.wsgi:application --bind 0.0.0.0:8000 --workers 3
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - loyalty_network

  bot:
    build: .
    command: python telegram_bot/bot.py
    volumes:
      - ./logs:/app/logs
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web
    restart: unless-stopped
    networks:
      - loyalty_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - ./ssl:/etc/nginx/ssl  # Mount SSL certificates
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - loyalty_network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  loyalty_network:
    driver: bridge